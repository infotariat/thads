728/207
207/3
1035/5
207/9
5*3*3*23
728/3
728/23
1035*3
1035*3
728/2
9*364
3276-1035
2241/728
1035/728
m2 <- matrix(c(5,-1,2,7,-2,6,9,0,-7,5,-3,-7), 3, 4, byrow=T)
rref(m2)
solve_matrix <- function(entries, rows, cols) {
m <- matrix(entries, nrow=rows, ncol=cols, byrow=TRUE)
ref <- rref(m)
return (ref)
}
library(pracma)
solve_matrix(c(1,2,4,8,2,4,6,8,3,6,9,12), 3,4,byrow=TRUE)
solve_matrix(c(1,2,4,8,2,4,6,8,3,6,9,12), 3,4)
solve_matrix(c(1,3,4,7,3,9,7,6), 2,4)
nums <- c(1,3,4,7,3,9,7,6)
solve_matrix(nums,2,4)
solve_matrix(nums,4,2
)
nums <- c(3,-2,4,0,9,-6,12,0,6,-4,8,0)
solve_matrix(nums,3,4)
install.packages('lessr')
install.packages('lessR')
library(lessR)
library(plyr)
library(dplyr)
source('~/messing_iris.r')
ir2
sqrt(4)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
val(1)
val(4/3)
val(5/3)
val(1) + val(4/3) + val(5/3) + val(2) + val(7/3) + val(8/3)
36.45752 * .333333333
(val(1) + val(4/3) + val(5/3) + val(2) + val(7/3) + val(8/3)) * (1/3)
val <- 3 * x
6*5 + 2
6 * (16/3) + 2
6 * (17/3) + 2
(1/3) * (sqrt(32) + sqrt(34) + sqrt(36) + sqrt(38) + sqrt(40) + sqrt(42))
y <- (1/3) * (sqrt(32) + sqrt(34) + sqrt(36) + sqrt(38) + sqrt(40) + sqrt(42))
signif(y, 7)
signif(y, 6)
signif(y, 9)
y <- signif((1/3) * (sqrt(32) + sqrt(34) + sqrt(36) + sqrt(38) + sqrt(40) + sqrt(42)), 9)
y
install.packages('readr')
source('~/linalg111a.r')
rref(mat2)
mat2
source('~/messing_iris.r')
ir2
hist(ir2$sepL)
hist(ir2$sepw, col='blue')
hist(ir2$sepw)
hist(ir2$sepW, col='blue')
source('~/pop_pyramid.r')
y <- matrix(c(1,2,3,4), nrow=2)
y
3 * y
y %*% y
y+y
mtcars
mtcars
boxplot(mtcars$mpg)
source('~/.active-rstudio-document')
boxplot(mpg, col="blue")
boxplot(mpg, col="steelblue")
boxplot(mpg, col="steelblue4")
boxplot(mpg, col="steelblue2")
main='Boxplot of MPG')
boxplot(mpg, col="steelblue2",
main='Boxplot of MPG')
source('~/.active-rstudio-document')
mpg <- mtcars$mpg
boxplot(mpg, col="steelblue2",
main='Boxplot of MPG', cex=1.4)
mpg <- mtcars$mpg
boxplot(mpg, col="steelblue2",
main='Boxplot of MPG', cex=1.0)
mpg <- mtcars$mpg
boxplot(mpg, col="steelblue2",
main='Boxplot of MPG',
ylab='MPG values')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
plot(mpg ~ wt)
wt <- mtcars$wt
plot(mpg ~ wt)
plot(mpg ~ wt, pch=19)
plot(mpg ~ wt, pch=19, col='steelblue2')
source('~/.active-rstudio-document')
help(mtcars)
abline()
help(abline)
mdl <- lm(mtcars$mpg ~ mtcars$wt)
abline(mdl)
abline(mdl, col='chartreuse')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
install.packages('purrr')
library(purrr)
help(purrr)
??purrr
df <- data.frame(a = rnorm(10), b = rnorm(10), c = rnorm(10), d = rnorm(10))
df
output <- vector('double', ncol(df))
output
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
df <- data.frame(a=rnorm(10),
b=rnorm(10),
c=rnorm(10),
d=rnorm(10))
col_summary(df, fun=median)
col_summary(df, fun=mean)
col_summary(df, fun=sd)
col_summary <- function(df, fun) {
output <- numeric(length(df))
for (i in seq_along(df)) {
output[i] <- fun(df[[i]])
}
output
}
# now you can do this:
df <- data.frame(a=rnorm(10),
b=rnorm(10),
c=rnorm(10),
d=rnorm(10))
col_summary(df, fun=median)
col_summary(df, fun=mean)
col_summary(df, fun=sd)
sapply(df, mean)
col_summary(df, mean)
map_dbl(df, mean)
df <- data.frame(a = 1:10, b = 11:20)
map(df, mean)
l <- list(a=1:10, b=11:20)
map(l, mean)
list_of_results <- list(
list(a = 1, b = 'A'),
list(a = 2, b = 'C'),
list(a = 3, b = 'D')
)
map_dbl(list_of_results, function(x) x[['a']])
map_dbl(list_of_results, 'a')
map_dbl(list_of_results, 1)
library(purrr)
list_of_results <- list(
list(a = 1, b = 'A'),
list(a = 2, b = 'C'),
list(a = 3, b = 'D')
)
map_dbl(list_of_results, function(x) x[['a']])
map_dbl(list_of_results, 'a')
map_dbl(list_of_results, 1)
# stub
cyl <- split(mtcars, mtcars$cyl)
str(cyl)
cyl[[1]]
fit_reg <- function(df) {
lm(mpg ~ wt, data = df)
}
# then pass that function into map():
map(cyl, fit_reg)
map(cyl, function(df) lm(mpg ~ wt, data = df))
A
A <- matrix(c(1, -2, 3, -2, -3, -4, 2, -4, -9), 3, 3, byrow=TRUE)
A
b <- c(0,0,0)
b
solve(A, b)
A <- matrix(c(-3, 4, -8, -2, 5, 4), 3, 2, byrow=TRUE)
b <- c(0,0)
solve(A, b)
library(pracma)
rref(A)
A <- matrix(c(1, -2, 3, -2, -3, -4, 2, -4, -9), 3, 3, byrow=TRUE)
rref(A)
A <- matrix(c(-3, 4, -8, -2, 5, 4), 2, 3, byrow=TRUE)
rref(A)
A <- matrix(c(5, -3, 2, -3, -4, 2), 2, 3, byrow=TRUE)
rref(A)
A <- matrix(c(2, 2, 4, -4, -4, -8, 0, -3, -3), 3, 3, byrow=TRUE)
rref(A)
A <- matrix(c(1, 2, -3, 2, 1, -3, -1, 1, 0), 3, 3, byrow=TRUE)
rref(A)
A <- matrix(c(1,3,-3,7,0,1,-4,5), 4, 2, byrow=TRUE)
rref(A)
A <- matrix(c(1,3,-3,7,0,1,-4,5), 2, 4, byrow=TRUE)
rref(A)
A <- matrix(c(2,2,4,-4,-4,-8,0,-3,-3), 3,3, byrow=TRUE)
rref(A)
A <- matrix(c(2,2,4,8,-4,-4,-8,-16,0,-3,-3, 12), 4,3, byrow=TRUE)
rref(A)
A <- matrix(c(2,2,4,8,-4,-4,-8,-16,0,-3,-3, 12), 3,4, byrow=TRUE)
rref(A)
library(RSQLite)
install.packages('RSQLite')
library(RSQLite)
db
db <- datasetsDb()
dbListTables(db)
data(quakes)
drv <- SQLite()
sapply(quakes, function(x) dbDataType(drv, x))
dbDataType(drv, 1)
dbDataType(drv, as.integer(1))
dbDataType(drv, "1")
dbDataType(drv, charToRaw("1"))
dbListTables()
dbListTables(drv)
dbUnloadDriver(drv)
dbReabTable(db, "CO2")
dbReadTable(db, "CO2")
dbGetQuery(db, "SELECT * FROM CO2 WHERE conc < 100")
dbListTables(drv)
dbDisconnect(drv)
rm(drv)
head(quakes)
j <- list(name="Joe", salary=55000, union=T)
j$salary
j[["salary"]]
j[[2]]
j[1:2]
help("data.frame")
library(hflights)
library(data.table)
install.packages("data.table")
library(hflights)
library(data.table)
install.packages("hflights")
mtcars
head(babynames)
install.packages("babynames")
library(babynames)
head(babynames)
head(lifetables)
getwd()
source('~/PCC/fall16/cis121/R Project/nba_data.r')
source('~/PCC/fall16/cis121/R Project/nba_data.r')
nbadata()
nbadata()
source('~/PCC/fall16/cis121/R Project/nba_data.r')
nbadata()
url <- 'http://www.basketball-reference.com/players/'
importData(url)
pdoc <- htmlParse(url)
str(pdoc)
pnode <- getNodeSet(pdoc, "//table")
str(pnode)
pnode[0]
pnode[0][3]
pnode[[0]]
pnode[1]
pnode[2]
pnode[3]
pnode
myURL <- makeURL('wallara01')
myURL
pdoc <- htmlParse(myURL)
pnode <- getNodeSet(pdoc, "//table")
pnode[[2]]
pnode[[3]]
help(XML)
str(pnode)
readHTMLTable(pnode[[3]], header=pHeader, colClasses=pClasses)
readKeyValueDB(pnode[[3]], header=pHeader, colClasses=pClasses)
readHTMLTable(pnode[[1]], header=pHeader, colClasses=pClasses)
pClasses
pHeader
source('~/PCC/fall16/cis121/R Project/nba_data.r')
nbadata()
players <- nbadata()
players
filter(players, age <= 26 && age >= 24)
filter(players, age <= 26 & age >= 24)
ewing2426 <- filter(players, age <= 26 & age >= 24 & name == 'ewingpa01')
ewing2426 <- filter(players, age <= 26 & age >= 24 & namecol == 'ewingpa01')
ewing2426
plot(ewing2426$fgp)
drob2426 <- filter(players, age <= 26 & age >= 24 & namecol == 'robinda01')
plot(ewing2426$blk)
plot(drob2426$blk)
source('~/PCC/fall16/cis121/R Project/nba_data.r')
source('~/PCC/fall16/cis121/R Project/nba_data.r')
multiplayerCareers()
multiplayerCareers()
pmain
allData
multiplayerCareers()
source('~/PCC/fall16/cis121/R Project/nba_data.r')
multiplayerCareers()
careerStats(stockjo01)
careerStats('stockjo01')
steph <- careerStats('curryst01')
steph
iris
library(ggplot2)
head(mpg_)
head(mpg)
str(mpg)
summary(mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, color=class, data = mpg)
qplot(displ, hwy, color=city, data = mpg)
qplot(displ, hwy, color=cty, data = mpg)
qplot(displ, hwy, shape=class, data=mpg)
qplot(displ, hwy, size=cyl, data=mpg)
qplot(displ, hwy, data=mpg) + facet_grid(. - cyl)
qplot(displ, hwy, data=mpg) + facet_grid(. ~ cyl)
centers <- multiplayerCareers()
centers
qplot(age, pts, data=centers) + facet_grid(. ~ namecol)
qplot(age, blk, data=centers) + facet_grid(. ~ namecol)
wilt <- careerStats('chambwi01')
wilt
getwd()
setwd("~/Projects/thads")
setwd("~/projects/thads")
setwd("~/tinasky/thads")
setwd("~/thads")
list.files()
source thads.r
source('~/thads/thads/thads.r')
setwd("/thads")
getwd()
ls
list.dirs()
getwd()
ls
list.fiiles()
list.files()
list.dirs()
setwd('~/tinasky')
setwd('~../tinasky')
setwd('../tinasky')
setwd('..')
list.dirs()
setwd("~/thads/thads")
list.files()
source('~/thads/thads/thads.r')
head(national)
plot(national$value)
plot(national$value, type-"l")
help(plot)
plot(national$value, type="l")
plot(sort(national$value))
plot(sort(national$value), type="l")
plot(sort(homeowners$value), type="l")
hist(sort(homeowners$value))
plot(sort(homeowners$value), type="l",
main="Chart of Sorted Home Values\nNational Sample Homeowners",
col="blue"
)
plot(sort(homeowners$value), type="l",
main="Chart of Sorted Home Values\nNational Sample Homeowners",
col="blue",
xlab="Sorted Homeowners",
ylab="Home Value"
)
help(col)
help("cex)
;
hist(sort(homeowners$value),
main="Histogram of Home Values\nNational Sample",
col="blue",
col.main="red"
)
ggplot(homeowners, aes(value))
ggplot(homeowners, aes(x=value))
ggplot(homeowners, aes(x=value)) +
geom_histogram()
max(homeowners$value)
ggplot(homeowners, aes(x=value)) +
geom_histogram(binwidth=500)
ggplot(homeowners, aes(x=value)) +
geom_histogram(binwidth=200)
ggplot(homeowners, aes(x=value)) +
geom_histogram(binwidth=25000)
ggplot(homeowners, aes(x=value)) +
geom_histogram(binwidth=50000)
ggplot(homeowners, aes(x=value)) +
geom_histogram(binwidth=100000)
ggplot(homeowners, aes(x=value)) +
geom_histogram(binwidth=50000)
ggplot(homeowners, aes(x=value)) +
geom_histogram(binwidth=50000,
color="lightgreen",
fill="grey97")
national %>%
group_by(own) %>%
summarize(avg = mean(utilShareInc))
source('~/thads/thads/thads.r')
head(renters)
head(homeowners)
head(national)
ggplot(homeowners, aes(x=value)) +
geom_histogram(binwidth=50000,
color="lightgreen",
fill="grey97")
plt <- ggplot(national, aes(utilCost)) +
geom_histogram(fill="grey97", color="steelblue")
plt + facet_grid(. ~ own)
theme_grey()
ggplot(homeowners, aes(x=value)) +
geom_histogram(binwidth=50000,
color="lightgreen",
fill="grey97") +
theme_dark()
ggplot(homeowners, aes(x=value)) +
geom_histogram(binwidth=50000,
color="lightgreen",
fill="grey97") +
theme_light()
ggplot(homeowners, aes(x=value)) +
geom_histogram(binwidth=50000,
color="lightgreen",
fill="grey97") +
theme_linedraw()
ggplot(homeowners, aes(x=value)) +
geom_histogram(binwidth=50000,
color="lightgreen",
fill="grey97") +
theme_classic()
hist(sort(homeowners$value),
main="Histogram of Home Values\nNational Sample",
col="blue",
col.main="red"
)
plot(sort(homeowners$value), type="l",
main="Chart of Sorted Home Values\nNational Sample Homeowners",
col="blue",
xlab="Sorted Homeowners",
ylab="Home Value"
)
g <- ggplot(homeowners, aes(y=value))
g + geom_line()
head(homeowners)
ownerIndices <- c(1:length(homeowners))
g <- ggplot(homeowners, aes(x=ownerIndices, y=sort(value)))
g + geom_line()
ownerIndices <- c(1:length(homeowners))
g <- ggplot(homeowners, aes(x=ownerIndices, y=value))
g + geom_line()
g <- ggplot(homeowners, aes(x=x, y=value))
g + geom_line()
g <- ggplot(sort(homeowners$value), aes(x=x, y=value))
g + geom_line()
g <- ggplot(sort(homeowners$value), aes(x=value))
g + geom_line()
g <- ggplot(sort(homeowners$value), aes(value))
g + geom_line()
plot(sort(homeowners$value), type="l",
main="Chart of Sorted Home Values\nNational Sample Homeowners",
col="blue",
xlab="Sorted Homeowners",
ylab="Home Value"
)
ggplot(homeowners, aes(x=value)) +
geom_histogram(binwidth=50000,
color="lightgreen",
fill="grey97") +
theme_classic()
ggplot(homeowners, aes(x=value)) +
geom_histogram(binwidth=50000,
color="lightgreen",
fill="grey97",
main="Home Values\nNational Sample") +
theme_classic()
ggplot(homeowners, aes(x=value)) +
geom_histogram(binwidth=50000,
color="lightgreen",
fill="grey97",
title="Home Values\nNational Sample") +
theme_classic()
ggplot(homeowners, aes(x=value)) +
geom_histogram(binwidth=50000,
color="lightgreen",
fill="grey97") +
theme_classic() +
labs(title="Home Values\nNational Sample")
summary(homeowners$value)
IQR(homeowners$value)
median(homeowners$value)
head(homeowners)
summary(homeowners$utilShareInc)
summary(renters$utilShareInc)
summary(renters$utilShareInc, na.rm=TRUE)
